@model archi_company_mvc.Models.Ticket

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Ticket</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RequestDate" class="control-label"></label>
                <input asp-for="RequestDate" class="form-control" />
                <span asp-validation-for="RequestDate" class="text-danger"></span>
            </div>
            @if (Model.Consumables != null && Model.Consumables.Count() > 0 ) {
                @foreach (Consumable cons in Model.Consumables)
                {   
                    
                    var Brand = cons.ConsumableType.Brand;
                    var Name = cons.ConsumableType.Name;
                    var displayString = Brand + " " + Name;
                    <div class="form-group">
                        <span> @Html.DisplayNameFor(model => model.Consumables) : @Html.DisplayFor(model =>  displayString) -> @Html.DisplayFor(model => cons.Quantity)</span>
                    </div>
                }
                
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
